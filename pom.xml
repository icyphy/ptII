<!-- $Id$ 
Ptolemy II Maven configuration

You will need to increase the amount of memory Maven uses, under bash try:
export MAVEN_OPTS="-Xms512m -Xmx512m -XX:PermSize=48m"

See $PTII/doc/coding/maven.htm
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <version>11.0.devel</version>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ptolemy</groupId>
  <artifactId>ptII</artifactId>
  <packaging>jar</packaging>
  <name>ptII</name>
  <description>Ptolemy II consists of a group of Java packages that support heterogeneous concurrent modeling and design.</description>
  <url>http://ptolemy.org</url>
  <issueManagement>
    <system>bugzilla</system>
    <url>http://chess.eecs.berkeley.edu/bugzilla</url>
  </issueManagement>
  <inceptionYear>1997</inceptionYear>
  <!-- <siteAddress>moog.eecs.berkeley.edu</siteAddress> -->
  <!-- <siteDirectory>~ptII/ptweb/ptolemyII/ptII7.1</siteDirectory> -->
  <!-- <distributionSite>moog.eecs.berkeley.edu</distributionSite> -->
  <!-- <distributionDirectory>~ptII/ptweb/ptolemyII/ptII7.1/dist</distributionDirectory> -->
  <!-- <mailingList>
    <name>Ptolemy-hackers</name>
    <subscribe>ptolemy-hackers-request@ptolemy.eecs.berkeley.edu</subscribe>
    <unsubscribe>ptolemy-hackers-request@ptolemy.eecs.berkeley.edu</unsubscribe>
    <post>ptolemy-hackers@ptolemy.eecs.berkeley.edu</post>
    <archive>http://groups.google.com/groups?hl=en&lr=&safe=off&group=comp.soft-sys.ptolemy</archive>
  </mailingList> -->
  <developers>
    <!-- See doc/authors.htm -->
    <developer>
      <id>eal</id>
      <name>Edward A. Lee</name>
      <url>http://ptolemy.eecs.berkeley.edu/~eal</url>
      <organization>EECS Department, University of California, Berkeley</organization>
      <organizationUrl>http://www.eecs.berkeley.edu</organizationUrl>
      <roles>
	<role>Principal Investigator</role>
	<role>Java Developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
    <developer>
      <id>cxh</id>
      <name>Christopher Brooks</name>
      <url>http://ptolemy.eecs.berkeley.edu/~cxh</url>
      <organization>EECS Department, University of California, Berkeley</organization>
      <organizationUrl>http://www.eecs.berkeley.edu</organizationUrl>
      <roles>
	<role>Release Engineer</role>
	<role>Java Developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
    <developer>
      <id>kybae</id>
      <name>Kyungmin Bae</name>
      <roles>
        <role>Verification</role>
      </roles>
    </developer>
    <developer>
      <id>chad</id>
      <name>Chad Berkley</name>
      <roles>
        <role>Kepler Support</role>
      </roles>
    </developer>
    <developer>
      <id>dbui</id>
      <name>Dai Bui</name>
      <url>http://ptolemy.eecs.berkeley.edu/~cxh</url>
      <organization>EECS Department, University of California, Berkeley</organization>
      <organizationUrl>http://www.eecs.berkeley.edu</organizationUrl>
      <roles>
	<role>Code Generation</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
    <developer>
      <name>Elaine Cheong</name>
      <roles>
        <role>Ptolemy II 7.0 Ptalon Updates</role>
      </roles>
    </developer>
    <developer>
      <id>tfeng</id>
      <name>Thomas Huining Feng</name>
      <roles>
        <role>Model Transformation, Event Relationship Graph</role>
      </roles>
    </developer>
    <developer>
      <id>mankit</id>
      <name>Man-kit (Jackie) Leung</name>
      <roles>
        <role>Code Generation</role>
      </roles>
    </developer>
    <developer>
      <id>johnr</id>
      <name>John Reekie</name>
      <roles>
        <role>Vergil Graphical User Interface</role>
      </roles>
    </developer>
    <developer>
      <id>rodiers</id>
      <name>Bert Rodiers</name>
      <roles>
        <role>Width Inference</role>
      </roles>
    </developer>
    <developer>
      <id>chf</id>
      <name>Chamberlain Fong</name>
      <roles>
        <role>Java 3D domain</role>
      </roles>
    </developer>
    <developer>
      <id>davisj</id>
      <name>John Davis, II</name>
    </developer>
    <developer>
      <name>Mudit Goel</name>
    </developer>
    <developer>
      <name>Rowland Johnson</name>
      <roles>
        <role>Unit System</role>
      </roles>
    </developer>
    <developer>
      <name>Bilung Lee</name>
    </developer>
    <developer>
      <name>Jie Liu</name>
    </developer>
    <developer>
      <name>Xiaojun Liu</name>
    </developer>
    <developer>
      <name>Lukito Muliadi</name>
    </developer>
    <developer>
      <name>Stephen Neuendorffer</name>
      <roles>
        <role>7.0 Copernicus and Type System updates</role>
        <role>Vergil Graphical User Interface</role>
      </roles>
    </developer>
    <developer>
      <name>Neil Smyth</name>
    </developer>
    <developer>
      <name>Jeff Tsay</name>
    </developer>
    <developer>
      <name>Yuhong Xiong</name>
      <roles>
        <role>Type System</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Chad Berkley</name>
      <roles>
        <role>Kepler Support</role>
      </roles>
    </contributor>
    <contributor>
      <name>Adam Cataldo</name>
      <roles>
        <role>Ptalon</role>
      </roles>
    </contributor>
    <contributor>
      <name>Christine Cavanessians</name>
      <roles>
        <role>7.0 XSLT Actors</role>
      </roles>
    </contributor>
    <contributor>
      <name>Teale Fristoe</name>
      <roles>
        <role>7.0 Code Generation</role>
      </roles>
    </contributor>
    <contributor>
      <name>Ben Lickly</name>
      <roles>
        <role>7.0 Float Type</role>
      </roles>
    </contributor>
    <contributor>
      <name>Isaac Liu</name>
      <roles>
        <role>7.0 Short Type</role>
      </roles>
    </contributor>
    <contributor>
      <name>Haiyang Zheng</name>
      <roles>
        <role>7.0 Continuous Domain</role>
      </roles>
    </contributor>
    <contributor>
      <name>Gang Zhou - Code Generation</name>
      <roles>
        <role>7.0 Code Generation</role>
      </roles>
    </contributor>
    <contributor>
      <name>Jim Armstrong</name>
    </contributor>
    <contributor>
      <name>Vincent Arnould</name>
    </contributor>
    <contributor>
      <name>Philip Baldwin</name>
    </contributor>
    <contributor>
      <name>Frederic Boulanger</name>
    </contributor>
    <contributor>
      <name>Raymond Cardillo</name>
    </contributor>
    <contributor>
      <name>Chris Chang</name>
    </contributor>
    <contributor>
      <name>Albert Chen</name>
    </contributor>
    <contributor>
      <name>Colin Cochran</name>
    </contributor>
    <contributor>
      <name>Brieuc Desoutter</name>
    </contributor>
    <contributor>
      <name>Pedro Domecq</name>
    </contributor>
    <contributor>
      <name>William Douglas</name>
    </contributor>
    <contributor>
      <name>Johan Eker</name>
    </contributor>
    <contributor>
      <name>Thomas Huining Feng</name>
    </contributor>
    <contributor>
      <name>Tobin Fricke</name>
    </contributor>
    <contributor>
      <name>Geroncio Galicia</name>
    </contributor>
    <contributor>
      <name>Ben Horowitz</name>
    </contributor>
    <contributor>
      <name>Heloise Hse</name>
    </contributor>
    <contributor>
      <name>Efrat Jaeger</name>
    </contributor>
    <contributor>
      <name>J&ouml;rn Janneck</name>
    </contributor>
    <contributor>
      <name>Zoltan Kemenczy</name>
    </contributor>
    <contributor>
      <name>Bart Kienhuis</name>
    </contributor>
    <contributor>
      <name>Christoph Meyer Kirsch</name>
    </contributor>
    <contributor>
      <name>Sanjeev Kohli</name>
    </contributor>
    <contributor>
      <name>Vinay Krishnan</name>
    </contributor>
    <contributor>
      <name>Robert Kroeger</name>
    </contributor>
    <contributor>
      <name>Daniel Lazaro Cuadrado</name>
    </contributor>
    <contributor>
      <name>David Lee</name>
    </contributor>
    <contributor>
      <name>Michael Leung</name>
    </contributor>
    <contributor>
      <name>John Li</name>
    </contributor>
    <contributor>
      <name>Andrew Mihal</name>
    </contributor>
    <contributor>
      <name>Eleftherios Matsikoudis</name>
    </contributor>
    <contributor>
      <name>Aleksandar Necakov</name>
    </contributor>
    <contributor>
      <name>Mike Kofi Okyere</name>
    </contributor>
    <contributor>
      <name>Sarah Packman</name>
    </contributor>
    <contributor>
      <name>Shankar Rao</name>
    </contributor>
    <contributor>
      <name>Rakesh Reddy</name>
    </contributor>
    <contributor>
      <name>Adriana Ricchiuti</name>
    </contributor>
    <contributor>
      <name>Sonia Sachs</name>
    </contributor>
    <contributor>
      <name>Ismael M. Sarmiento</name>
    </contributor>
    <contributor>
      <name>Michael Shilman</name>
    </contributor>
    <contributor>
      <name>Sean Simmons</name>
    </contributor>
    <contributor>
      <name>Mandeep Singh</name>
    </contributor>
    <contributor>
      <name>Peter N. Steinmetz</name>
    </contributor>
    <contributor>
      <name>Dick Stevens</name>
    </contributor>
    <contributor>
      <name>Mary Stewart</name>
    </contributor>
    <contributor>
      <name>Ned Stoffel</name>
    </contributor>
    <contributor>
      <name>Manda Sutijono</name>
    </contributor>
    <contributor>
      <name>Neil Turner</name>
    </contributor>
    <contributor>
      <name>Guillaume Vibert</name>
    </contributor>
    <contributor>
      <name>Kees Vissers</name>
    </contributor>
    <contributor>
      <name>Brian K. Vogel</name>
    </contributor>
    <contributor>
      <name>Yuke Wang</name>
    </contributor>
    <contributor>
      <name>Xavier Warzee</name>
    </contributor>
    <contributor>
      <name>Scott Weber</name>
    </contributor>
    <contributor>
      <name>Paul Whitaker</name>
    </contributor>
    <contributor>
      <name>Winthrop Williams</name>
    </contributor>
    <contributor>
      <name>Ed Willink</name>
    </contributor>
    <contributor>
      <name>Michael Wirthlin</name>
    </contributor>
    <contributor>
      <name>William Wu</name>
    </contributor>
    <contributor>
      <name>Xiaowen Xin</name>
    </contributor>
    <contributor>
      <name>Paul Yang</name>
    </contributor>
    <contributor>
      <name>James Yeh</name>
    </contributor>
    <contributor>
      <name>Nick Zamora</name>
    </contributor>
    <contributor>
      <name>Charlie Zhong</name>
    </contributor>
  </contributors>
  <licenses>
    <license>
      <name>BSD License</name>
      <url>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/copyright.txt</url>
      <distribution>manual</distribution>
      <comments>Ptolemy II is licensed under the BSD License</comments>
    </license>
    <license>
      <name>Aelfred License</name>
      <url>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/com/microstar/xml/README.txt</url>
      <distribution>manual</distribution>
      <comments>Ptolemy II uses Aelfred to parse xml files.</comments>
    </license>
  </licenses>
  <!-- <versions>
    <version>
      <name>Ptolemy II 7.0.1</name>
      <tag>rel-7-0-beta-2</tag>
    </version>
  </version> -->
  <!-- <repository>
    <connection>scm:svn:http://source.eecs.berkeley.edu/svn/chess/ptII</connection>
    <developerConnection>scm:svn:ssh:source.eecs.berkeley.edu/svn/chess/ptII</developerConnection>
  </repository> -->
  <organization>
    <name>The Ptolemy Project</name>
    <url>http://ptolemy.org</url>
    <!-- <logo>http://ptolemy.eecs.berkeley.edu/image/ptolemy.jpg</logo> -->
  </organization>
  <properties>
    <project.Name>Ptolemy II</project.Name>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.Url>http://ptolemy.org</project.Url>
    <project.Description>Ptolemy II consists of a group of Java packages that support heterogeneous concurrent modeling and design.</project.Description>
    <!-- skip test-compile when doing "maven package" -->
    <maven.test.skip>true</maven.test.skip>
  </properties> 
  <dependencies>

    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>[1.9.9,2.7.7]</version>
    </dependency>
    <dependency>
      <groupId>colt</groupId>
      <artifactId>colt</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>com.fifesoft</groupId>
      <!-- for rsyntaxtexteditor -->
      <artifactId>spellchecker</artifactId>
      <version>2.5.7</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itext-xtra</artifactId>
      <version>5.1.2</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
       <groupId>org.python</groupId>
       <artifactId>jython-standalone</artifactId>
       <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <version>0.3.5</version>
    </dependency>

    <!-- <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.15</version>
    </dependency>
     -->
<!--    <dependency>
      <groupId>javax.media</groupId>
     <artifactId>jai_core</artifactId>
     <version>1.1.2_01</version>
    </dependency>
    <dependency>
      <groupId>java3d</groupId>
      <artifactId>j3d-core</artifactId>
      <version>1.3.1</version>
    </dependency>-->
    <dependency>
      <groupId>net.jini</groupId>
      <artifactId>jini-core</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>net.jini</groupId>
      <artifactId>jini-ext</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.beanshell</groupId>
      <artifactId>bsh</artifactId>
      <version>2.0b4</version>
    </dependency>

    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>1.7R4</version>
    </dependency>

    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.client</artifactId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.common</artifactId>
      <version>1.0.0</version>
    </dependency>
    
    

    <!-- Dependencies that need to be added manually -->
    <!-- See ptII/doc/coding/maven.htm for the commands 
	 to run to install these dependencies -->

    <dependency>  <!-- $PTII/vendors/misc/joystick/Joystick.jar -->
      <groupId>javajoystick</groupId>
      <artifactId>joystick</artifactId>
      <version>0.7</version>
    </dependency>

    <dependency>  <!-- $PTII/lib/jna.jar -->
      <groupId>jna</groupId>
      <artifactId>jna</artifactId>
      <version>4.0.0-variadic</version>
    </dependency>


    <!-- jars have to be taken from ptII/lib -->
    <dependency> <!-- $PTII/lib/sootclasses.jar -->
      <groupId>soot</groupId>
      <artifactId>sootclasses</artifactId>
      <version>ptII</version>
    </dependency>
    <dependency> <!-- $PTII/lib/mapss.jar -->
      <groupId>mapss</groupId>
      <artifactId>mapss</artifactId>
      <version>ptII</version>
    </dependency>
    <dependency> <!-- $PTII/lib/ptCal.jar -->
      <groupId>caltrop</groupId>
      <artifactId>ptCal</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/chic.jar -->
      <groupId>chic</groupId>
      <artifactId>chic</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/ptdb/lib/dbxml.jar -->
      <groupId>dbxml</groupId>
      <artifactId>dbxml</artifactId>
      <version>ptII</version>
    </dependency>
    <dependency> <!-- $PTII/ptdb/lib/db.jar -->
      <groupId>dbxml</groupId>
      <artifactId>db</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/g4ltl.jar -->
      <groupId>g4ltl</groupId>
      <artifactId>g4ltl</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/kieler.jar -->
      <groupId>kieler</groupId>
      <artifactId>kieler</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/jsoup-1.7.3.jar -->
      <!-- jsoup HTML parser library @ http://jsoup.org/ -->
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.7.3</version>
    </dependency>

    <dependency> 
      <groupId>oscP5</groupId>
      <artifactId>oscP5</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/protobuf.jar -->
      <groupId>protobuf</groupId>
      <artifactId>protobuf</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/ptjacl.jar -->
      <groupId>jacl</groupId>
      <artifactId>jacl</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> 
      <groupId>PDFRenderer</groupId>
      <artifactId>PDFRenderer</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/smack.jar -->
      <groupId>smack</groupId>
      <artifactId>smack</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> <!-- $PTII/lib/smackx.jar -->
      <groupId>smackx</groupId>
      <artifactId>smackx</artifactId>
      <version>ptII</version>
    </dependency>

    <dependency> 
      <groupId>socketio</groupId>
      <artifactId>socketio</artifactId>
      <version>ptII</version>
    </dependency>

  </dependencies>
  <repositories>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>ptolemy_repo</id>
      <name>Ptolemy II Repository</name>
      <url>https://chess.eecs.berkeley.edu/ptexternal/src/maven</url>
    </repository>
    <!-- 
    <repository>
      <id>archer_repo</id>
      <url>http://dev.archer.edu.au/maven</url>
    </repository>
    <repository>
      <id>archer-snapshots</id>
      <name>ARCHER SNAPSHOT Repository</name>
      <url>http://dev.archer.edu.au/archer-snapshots</url>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </repository>
    -->
  </repositories>
  <build>
    <!-- Don't use the Maven layout, use the Ptolemy layout -->
    <directory>${project.basedir}</directory>
    <outputDirectory>${project.basedir}</outputDirectory>
    <sourceDirectory>${project.basedir}</sourceDirectory>
    <scriptSourceDirectory>${project.basedir}</scriptSourceDirectory>
    <testSourceDirectory>${project.basedir}</testSourceDirectory>
    <testOutputDirectory>${project.basedir}</testOutputDirectory>
    <plugins>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>2.3.2</version>
	<configuration>
	  <source>1.8</source>
	  <target>1.8</target>
	  <verbose>true</verbose>
	  <maxmem>1024m</maxmem>
	  <excludes>
	   <!-- grep excluding .classpath.in | awk -F "|" '{for(i=2;i<NF;i++) {print "           <exclude>" $i "</exclude>"}}' | sed 's@/</exclude>@/**</exclude>@' -->
	   <exclude>**/.svn/**</exclude>
	   <exclude>**/com/jhlabs/**</exclude>
	   <exclude>org/hlacerti/**</exclude>
	   <exclude>org/ptolemy/opencv/**</exclude>
	   <exclude>org/ptolemy/ssm/**</exclude>
           <exclude>org/terraswarm/accessor/accessors/web/node_modules/**</exclude>
           <exclude>org/terraswarm/accessor/accessors/web/hosts/cordova/demo/**</exclude>
           <exclude>org/terraswarm/accessor/accessors/web/hosts/cordova/plugins/**</exclude>
	   <exclude>pt-modules/**</exclude>
	   <exclude>ptdb/**</exclude>
	   <exclude>ptolemy/actor/lib/joystick/**</exclude>
	   <exclude>ptolemy/actor/lib/mail/**</exclude>
	   <exclude>ptolemy/homer/**</exclude>
	   <exclude>ptolemy/vergil/basic/imprt/g4ltl/**</exclude>
           <exclude>**/adm/**</exclude>
           <exclude>**/build/**</exclude>
           <exclude>**/codeDoc/**</exclude>
           <exclude>**/config/**</exclude>
           <exclude>**/diva/util/java2d/svg/**</exclude>
           <exclude>**/ptolemy/backtrack/eclipse/**</exclude>
           <exclude>**/ptolemy/backtrack/test/**</exclude>
           <exclude>doc/coding/templates/**</exclude>
           <exclude>doc/doclets/**</exclude>
           <exclude>ptolemy/actor/lib/excel/**</exclude>
           <exclude>ptolemy/actor/lib/io/comm/**</exclude>
           <exclude>ptolemy/actor/lib/jai/**</exclude>
           <exclude>ptolemy/actor/lib/jjs/**</exclude>
           <exclude>ptolemy/actor/lib/jmf/**</exclude>
           <exclude>ptolemy/actor/lib/opencv/**</exclude>
           <exclude>ptolemy/actor/lib/r/**</exclude>
           <exclude>ptolemy/actor/lib/vertx/**</exclude>
           <exclude>ptolemy/apps/**</exclude>
           <exclude>ptolemy/copernicus/jhdl/**</exclude>
           <exclude>ptolemy/copernicus/kernel/fragment/**</exclude>
           <exclude>ptolemy/distributed/**</exclude>
           <exclude>ptolemy/domains/ct/demo/Saber/**</exclude>
           <exclude>ptolemy/domains/gr/**</exclude>
           <exclude>ptolemy/domains/gr/lib/experimental/**</exclude>
           <exclude>ptolemy/domains/gr/lib/quicktime/**</exclude>
           <exclude>ptolemy/domains/pdf/**</exclude>
           <exclude>ptolemy/domains/ptinyos/util/nc2moml/**</exclude>
           <exclude>ptolemy/domains/ptinyos/util/ncapp2moml/**</exclude>
           <exclude>ptolemy/domains/space/**</exclude>
           <exclude>ptolemy/moml/test/NoPackageActor.java</exclude>
           <exclude>ptolemy/plot/servlet/**</exclude>
           <exclude>reports/**</exclude>
           <exclude>src/**</exclude>
           <exclude>target/**</exclude>
           <exclude>vendors/**</exclude>
	  </excludes>
	</configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
	    <configuration>
	      <directory>${project.basedir}</directory>
	      <outputDirectory>${project.basedir}</outputDirectory>
	      <sourceDirectory>${project.basedir}</sourceDirectory>
	      <interimDirectory>${project.basedir}</interimDirectory>
	    </configuration>
        <version>2.4</version>
        <executions>
          <execution>
            <id>javacc-ptparser</id>
            <goals>
              <goal>jjtree-javacc</goal>
            </goals>
	    <configuration>
	      <directory>${project.basedir}</directory>
	      <outputDirectory>${project.basedir}</outputDirectory>
	      <sourceDirectory>${project.basedir}</sourceDirectory>
	      <interimDirectory>${project.basedir}</interimDirectory>
	      <isStatic>false</isStatic>
	      <buildNodeFiles>false</buildNodeFiles>
	      <includes>
		<include>**/PtParser.jjt</include>
	      </includes>
            </configuration>
          </execution>

          <execution>
            <id>javacc-matrixparser</id>
	    <!-- phase had to be changed to ensure this is
		 built after PtParser as the SimpleCharStream.java
	         file that is needed is the one build by PtParser -->
	    <phase>process-sources</phase>
            <goals>
              <goal>jjtree-javacc</goal>
            </goals>
	    <configuration>
	      <directory>${project.basedir}</directory>
	      <outputDirectory>${project.basedir}</outputDirectory>
	      <sourceDirectory>${project.basedir}</sourceDirectory>
	      <interimDirectory>${project.basedir}</interimDirectory>
	      <isStatic>true</isStatic>
	      <buildNodeFiles>false</buildNodeFiles>
	      <includes>
		<include>**/MatrixParser.jjt</include>
	      </includes>
	      <excludes>
		<exclude>**/adm/**</exclude>
	      </excludes>
            </configuration>
          </execution>

          <execution>
            <id>javacc</id>
            <goals>
              <goal>jjtree-javacc</goal>
            </goals>
	    <configuration>
	      <directory>${project.basedir}</directory>
	      <outputDirectory>${project.basedir}</outputDirectory>
	      <sourceDirectory>${project.basedir}</sourceDirectory>
	      <interimDirectory>${project.basedir}</interimDirectory>
	      <isStatic>false</isStatic>
	      <buildNodeFiles>true</buildNodeFiles>
	      <excludes>
		<exclude>**/PtParser.jjt</exclude>
		<exclude>**/MatrixParser.jjt</exclude>
		<exclude>**/adm/**</exclude>
		<exclude>**/vendors/**</exclude>
	      </excludes>
            </configuration>
          </execution>

          <execution>
            <id>javacc-uparser</id>
            <goals>
              <goal>jjtree-javacc</goal>
            </goals>
	    <configuration>
	      <directory>${project.basedir}</directory>
	      <outputDirectory>${project.basedir}</outputDirectory>
	      <sourceDirectory>${project.basedir}</sourceDirectory>
	      <interimDirectory>${project.basedir}</interimDirectory>
	      <isStatic>false</isStatic>
	      <buildNodeFiles>false</buildNodeFiles>
	      <includes>
		<include>**/UParser.jjt</include>
	      </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>antlr-maven-plugin</artifactId>
	<version>2.2</version>
        <configuration>
          <!--
            Comma separated list of grammar files or pattern grammar files
            By default, grammar file(s) is in ${basedir}/src/main/antlr
          -->
	  <directory>${project.basedir}</directory>
	  <outputDirectory>${project.basedir}</outputDirectory>
	  <sourceDirectory>${project.basedir}</sourceDirectory>
          <grammars>ptolemy/actor/ptalon/parser.g,ptolemy/actor/ptalon/populator.g,ptolemy/actor/ptalon/scopeChecker.g</grammars>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
	    <goals>
	      <goal>java</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <executable>java</executable>
	  <arguments>
	    <argument>-classpath</argument>
	    <classpath/>
	    <!-- <argument>ptolemy.actor.gui.MoMLSimpleApplication</argument>
	    <argument>${project.basedir}/ptolemy/actor/lib/test/FileWriter.xml</argument> -->
	    <argument>ptolemy.vergil.VergilApplication</argument>
	  </arguments>
	</configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
	<version>2.3.2</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>ptolemy.vergil.VergilApplication</mainClass>
            </manifest>
          </archive>
	  <excludes>
	    <exclude>**/.svn/**</exclude>
	    <exclude>ptII-10.0.devel.jar</exclude>
	  </excludes>
        </configuration>
      </plugin>

    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>webstart-maven-plugin</artifactId>
      <version>1.0-alpha-1</version>
      <executions>
	<execution>
	  <goals>
	    <goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
	  </goals>
	</execution>
      </executions>
      <dependencies>
        <dependency>
          <groupId>org.ptolemy</groupId>
          <artifactId>ptII</artifactId>
          <version>10.0.devel</version>
	</dependency>
      </dependencies>


      <configuration>
	<!-- See http://mojo.codehaus.org/webstart/webstart-maven-plugin/jnlp-mojos-overview.html -->
	<jnlp>
	  <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
	  <inputTemplate>ptolemy/actor/gui/jnlp/jnlp-template.vm</inputTemplate> <!-- relative to inputTemplateResourcePath -->
	  <outputFile>vergil.jnlp</outputFile> <!-- defaults to launch.jnlp -->
	  <mainClass>ptolemy.vergil.VergilApplication</mainClass>
	</jnlp>

	<!--

          This is the name of the directory within which the processed JNLP artifacts 
          will be placed. This directory will reside in the root of the WAR file 
          produced by the enclosing project. The name provided here must match the 
          servlet-mapping url-pattern provided in the web.xml file. The default value is 'webstart'. 
          -->
	<outputDirectory>${project.build.directory}/${project.build.finalName}/webstart</outputDirectory>

	<!-- 
          This is the directory containing the Velocity templates from which the JNLP files 
          will be generated. The default location is 'src/main/jnlp'.
	-->
	<templateDirectory>${project.basedir}/util/jnlp</templateDirectory>
	<!-- workDirectory> </workDirectory -->
	<artifactItems>
	  <artifactItem>
	    <groupId>org.ptolemy</groupId>
	    <artifactId>ptII-10.0.devel.jar</artifactId>
	    <version>10.0.devel</version>
	    <type>jar</type>                            
	  </artifactItem>
	</artifactItems>
      </configuration>
    </plugin>

    <!-- Configure "mvn clean" to remove the .class files instead of
	 the entire default directory.
	 The issue here is that Maven expect to have an output directory
	 that is separate from the the source directory.  However, Ptolemy
	 does it differently, where the .class files are in the same directory
	 as the .java files.
	 For more about the clean plugin, see
	 https://maven.apache.org/plugins/maven-clean-plugin/examples/skipping-clean.html
      -->
    <plugin>
      <artifactId>maven-clean-plugin</artifactId>
      <version>3.0.0</version>
      <configuration>
	<excludeDefaultDirectories>true</excludeDefaultDirectories>
	<filesets>
	  <fileset>
	    <directory>.</directory>
	    <followSymlinks>false</followSymlinks>
	    <useDefaultExcludes>true</useDefaultExcludes>
	    <includes>
	      <include>**/*.class</include>
	    </includes>
	  </fileset>
	</filesets>
      </configuration>
    </plugin>

    </plugins>

  </build>
  <profiles>
    <!-- See https://issues.apache.org/jira/browse/ODFTOOLKIT-299 -->
    <profile>
      <id>default-tools.jar</id>
      <activation>
        <property>
          <name>java.vendor</name>
          <value>Oracle Corporation</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>1.5.0</version>
          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
    <profile><!-- For JDK 6 and OpenJDK with Sun as java.vendor -->
      <id>tools-Sun.jar</id>
      <activation>
        <property>
          <name>java.vendor</name>
          <value>Sun Microsystems Inc.</value>
	</property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>1.8.0</version>
          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
	</dependency>
      </dependencies>
    </profile>
  </profiles>
  <distributionManagement>
    <repository>
      <id>dev.archer.edu.au</id>
      <name>Archer</name>
      <url>
	scp://dev.archer.edu.au/var/www/html/maven
      </url>
    </repository>
    <snapshotRepository>
      <id>dev.archer.edu.au</id>
      <name>Archer</name>
      <url>
	scp://dev.archer.edu.au/var/www/html/archer-snapshots
      </url>
    </snapshotRepository>
  </distributionManagement>
</project>
